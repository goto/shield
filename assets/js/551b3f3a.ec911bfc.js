"use strict";(self.webpackChunkshield=self.webpackChunkshield||[]).push([[114],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3146:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],s={},c="Check Permission",l={unversionedId:"guides/check-permission",id:"guides/check-permission",title:"Check Permission",description:"There are two ways to check permission in the shield,",source:"@site/docs/guides/check-permission.md",sourceDirName:"guides",slug:"/guides/check-permission",permalink:"/shield/guides/check-permission",draft:!1,editUrl:"https://github.com/odpf/shield/edit/master/docs/docs/guides/check-permission.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/shield/installation"},next:{title:"Manage Resources",permalink:"/shield/guides/manage-resources"}},u={},p=[{value:"REST/gRPC API",id:"restgrpc-api",level:2},{value:"Proxy Middleware",id:"proxy-middleware",level:2}],d={toc:p};function m(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"check-permission"},"Check Permission"),(0,o.kt)("p",null,"There are two ways to check permission in the shield,"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"REST/gRPC API"),(0,o.kt)("li",{parentName:"ol"},"Proxy Middleware")),(0,o.kt)("h2",{id:"restgrpc-api"},"REST/gRPC API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'POST v1beta1/check/{resourceId} HTTP/1.1\nHost: localhost:8000\nContent-Type: application/json\n\n{\n  "actionId": "read",\n  "namespaceId": "test-namespace"\n}\n')),(0,o.kt)("h2",{id:"proxy-middleware"},"Proxy Middleware"),(0,o.kt)("p",null,"Users can add middleware in the rules set to check permission. Middlewares will be called before the proxy call and will not call the services if authorization fails."),(0,o.kt)("p",null,"The shield will read the action from the config, resource id from the path params, and UserId of the current user."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: test-res\n  path: /test-res\n  target: "http://127.0.0.1:3000/"\n  methods: ["PUT"]\n  frontends:\n    - name: test_api\n      path: "/test-res/{resource_id}"\n      method: "PUT"\n      middlewares:\n        - name: authz\n          config:\n            actions:\n              - test-res_all_actions\n              - test-res_cancel\n            attributes:\n              project:\n                key: X-Shield-Project\n                type: header\n                source: request\n')))}m.isMDXComponent=!0}}]);