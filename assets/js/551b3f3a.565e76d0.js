"use strict";(self.webpackChunkshield=self.webpackChunkshield||[]).push([[114],{5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const s="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),s=a(6010),i=a(2389),l=a(7392),o=a(7094),c=a(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){const{lazy:t,block:a,defaultValue:i,values:p,groupId:m,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=p??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),k=(0,l.l)(f,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===i?i:i??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==g&&!f.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,o.U)(),[y,T]=(0,r.useState)(g),E=[],{blockElementScrollPositionUntilNextRender:I}=(0,c.o5)();if(null!=m){const e=v[m];null!=e&&e!==y&&f.some((t=>t.value===e))&&T(e)}const N=e=>{const t=e.currentTarget,a=E.indexOf(t),n=f[a].value;n!==y&&(I(t),T(n),null!=m&&w(m,String(n)))},x=e=>{let t=null;switch(e.key){case"Enter":N(e);break;case"ArrowRight":{const a=E.indexOf(e.currentTarget)+1;t=E[a]??E[0];break}case"ArrowLeft":{const a=E.indexOf(e.currentTarget)-1;t=E[a]??E[E.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},h)},f.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>E.push(e),onKeyDown:x,onClick:N},i,{className:(0,s.Z)("tabs__item",d,i?.className,{"tabs__item--active":y===t})}),a??t)}))),t?(0,r.cloneElement)(b.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function m(e){const t=(0,i.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},3146:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),s=a(5488),i=a(5162),l=a(814);const o={},c="Checking Pemrissions",u={unversionedId:"guides/check-permission",id:"guides/check-permission",title:"Checking Pemrissions",description:"There are two ways to check a user permission on a resource in shield,",source:"@site/docs/guides/check-permission.md",sourceDirName:"guides",slug:"/guides/check-permission",permalink:"/shield/guides/check-permission",draft:!1,editUrl:"https://github.com/odpf/shield/edit/master/docs/docs/guides/check-permission.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Managing Group",permalink:"/shield/guides/managing-group"},next:{title:"Manage Resources",permalink:"/shield/guides/managing-resource"}},d={},p=[{value:"API Interface",id:"api-interface",level:2},{value:"Proxy Middleware",id:"proxy-middleware",level:2}],m={toc:p};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"checking-pemrissions"},"Checking Pemrissions"),(0,r.kt)("p",null,"There are two ways to check a user permission on a resource in shield,"),(0,r.kt)("h2",{id:"api-interface"},"API Interface"),(0,r.kt)(s.Z,{groupId:"api",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"HTTP",label:"HTTP",default:!0,mdxType:"TabItem"},(0,r.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},'$ curl --location --request POST \'http://localhost:8000/admin/v1beta1/check\'\n--header \'Content-Type: application/json\'\n--header \'Accept: application/json\'\n--header \'X-Shield-Email: doe.john@odpf.io\'\n--data-raw \'{\n  "objectId": "test-resource-beta1",\n  "objectNamespace": "entropy/firehose",\n  "permission": "owner"\n}\''))),(0,r.kt)("h2",{id:"proxy-middleware"},"Proxy Middleware"),(0,r.kt)("p",null,"Users can add middleware in the rules set to check permission. Middlewares will be called before the proxy call and will not call the services if authorization fails."),(0,r.kt)("p",null,"The shield will read the action from the config, resource id from the path params, and UserId of the current user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: test-res\n  path: /test-res\n  target: "http://127.0.0.1:3000/"\n  methods: ["PUT"]\n  frontends:\n    - name: test_api\n      path: "/test-res/{resource_id}"\n      method: "PUT"\n      middlewares:\n        - name: authz\n          config:\n            actions:\n              - test-res_all_actions\n              - test-res_cancel\n            attributes:\n              project:\n                key: X-Shield-Project\n                type: header\n                source: request\n')))}h.isMDXComponent=!0}}]);