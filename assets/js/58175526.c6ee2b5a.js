"use strict";(self.webpackChunkshield=self.webpackChunkshield||[]).push([[718],{5680:(e,n,r)=>{r.d(n,{xA:()=>u,yg:()=>g});var t=r(6540);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=c(r),d=o,g=f["".concat(l,".").concat(d)]||f[d]||p[d]||i;return r?t.createElement(g,s(s({ref:n},u),{},{components:r})):t.createElement(g,s({ref:n},u))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=d;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[f]="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=r[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5133:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=r(8168),o=(r(6540),r(5680));const i={},s="Configurations",a={unversionedId:"reference/configurations",id:"reference/configurations",title:"Configurations",description:"Shield can be configured with config.yaml file. An example of such is:",source:"@site/docs/reference/configurations.md",sourceDirName:"reference",slug:"/reference/configurations",permalink:"/shield/reference/configurations",draft:!1,editUrl:"https://github.com/goto/shield/edit/master/docs/docs/reference/configurations.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Adding Metadata Keys",permalink:"/shield/guides/adding-metadata-key"},next:{title:"Shield",permalink:"/shield/reference/api"}},l={},c=[],u={toc:c};function f(e){let{components:n,...r}=e;return(0,o.yg)("wrapper",(0,t.A)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"configurations"},"Configurations"),(0,o.yg)("p",null,"Shield can be configured with config.yaml file. An example of such is:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'version: 1\n\n# logging configuration\nlog:\n  # debug, info, warning, error, fatal - default \'info\'\n  level: debug\n  activity:\n    # none, stdout, db - default \'none\'\n    sink: stdout\n\n\napp:\n  port: 8000\n  identity_proxy_header: X-Shield-Email\n  # full path prefixed with scheme where resources config yaml files are kept\n  # e.g.:\n  # local storage file "file:///tmp/resources_config"\n  # GCS Bucket "gs://shield/resources_config"\n  resources_config_path: file:///tmp/resources_config\\\n  # secret required to access resources config\n  # e.g.:\n  # system environment variable "env://TEST_RULESET_SECRET"\n  # local file "file:///opt/auth.json"\n  # secret string "val://user:password"\n  # optional\n  resources_config_path_secret: env://TEST_RESOURCE_CONFIG_SECRET\n\ndb:\n  driver: postgres\n  url: postgres://shield:@localhost:5432/shield?sslmode=disable\n  max_query_timeout: 500ms\n\nspicedb:\n  host: spicedb.localhost\n  pre_shared_key: randomkey\n  port: 50051\n\n# proxy configuration\nproxy:\n  services:\n    - name: test\n      host: 0.0.0.0\n      # port where the proxy will be listening on for requests\n      port: 5556\n      # full path prefixed with scheme where ruleset yaml files are kept\n      # e.g.:\n      # local storage file "file:///tmp/rules"\n      # GCS Bucket "gs://shield/rules"\n      ruleset: file:///tmp/rules\n      # secret required to access ruleset\n      # e.g.:\n      # system environment variable "env://TEST_RULESET_SECRET"\n      # local file "file:///opt/auth.json"\n      # secret string "val://user:password"\n      # optional\n      ruleset_secret: env://TEST_RULESET_SECRET\n')))}f.isMDXComponent=!0}}]);