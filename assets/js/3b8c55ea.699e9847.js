"use strict";(self.webpackChunkshield=self.webpackChunkshield||[]).push([[217],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return t?n.createElement(h,i(i({ref:r},c),{},{components:t})):n.createElement(h,i({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=d;var a={};for(var s in r)hasOwnProperty.call(r,s)&&(a[s]=r[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<l;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9803:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var n=t(7462),o=t(3366),l=(t(7294),t(3905)),i=["components"],a={},s="Installation",u={unversionedId:"installation",id:"installation",title:"Installation",description:"We provide pre-built binaries, Docker Images and Helm Charts",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/shield/installation",draft:!1,editUrl:"https://github.com/odpf/shield/edit/master/docs/docs/installation.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/shield/"},next:{title:"Check Permission",permalink:"/shield/guides/check-permission"}},c={},p=[{value:"Binary (Cross-platform)",id:"binary-cross-platform",level:2},{value:"Homebrew",id:"homebrew",level:2},{value:"Docker",id:"docker",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Compiling from source",id:"compiling-from-source",level:2},{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Build",id:"build",level:3}],d={toc:p};function m(e){var r=e.components,t=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"installation"},"Installation"),(0,l.kt)("p",null,"We provide pre-built ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/odpf/shield/releases"},"binaries"),", ",(0,l.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/odpf/shield"},"Docker Images")," and ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/odpf/charts/tree/main/stable/shield"},"Helm Charts")),(0,l.kt)("h2",{id:"binary-cross-platform"},"Binary (Cross-platform)"),(0,l.kt)("p",null,"Download the appropriate version for your platform from ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/odpf/shield/releases"},"releases")," page. Once downloaded, the binary can be run from anywhere.\nYou don\u2019t need to install it into a global location. This works well for shared hosts and other systems where you don\u2019t have a privileged account.\nIdeally, you should install it somewhere in your PATH for easy use. ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local/bin")," is the most probable location."),(0,l.kt)("h2",{id:"homebrew"},"Homebrew"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# Install shield (requires homebrew installed)\n$ brew install odpf/taps/shield\n\n# Upgrade shield (requires homebrew installed)\n$ brew upgrade shield\n\n# Check for installed shield version\n$ shield version\n")),(0,l.kt)("h2",{id:"docker"},"Docker"),(0,l.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Docker installed")),(0,l.kt)("p",null,"Run Docker Image"),(0,l.kt)("p",null,"Shield provides Docker image as part of the release. Make sure you have Spicedb and postgres running on your local and run the following."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# Download docker image from docker hub\n$ docker pull odpf/shield\n\n# Run the following docker command with minimal config.\n$ docker run -p 8080:8080 \\\n  -e SHIELD_DB_DRIVER=postgres \\\n  -e SHIELD_DB_URL=postgres://shield:@localhost:5432/shield?sslmode=disable \\\n  -e SHIELD_SPICEDB_HOST=spicedb.localhost:50051 \\\n  -e SHIELD_SPICEDB_PRE_SHARED_KEY=randomkey\n  -v .config:.config\n  odpf/shield serve\n")),(0,l.kt)("h2",{id:"compiling-from-source"},"Compiling from source"),(0,l.kt)("h3",{id:"prerequisites-1"},"Prerequisites"),(0,l.kt)("p",null,"Shield requires the following dependencies:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Golang (version 1.18 or above)"),(0,l.kt)("li",{parentName:"ul"},"Git")),(0,l.kt)("h3",{id:"build"},"Build"),(0,l.kt)("p",null,"Run the following commands to compile ",(0,l.kt)("inlineCode",{parentName:"p"},"shield")," from source"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:odpf/shield.git\ncd shield\nmake build\n")),(0,l.kt)("p",null,"Use the following command to test"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./shield version\n")),(0,l.kt)("p",null,"Shield service can be started with the following command although there are few required ",(0,l.kt)("a",{parentName:"p",href:"/shield/reference/configurations"},"configurations")," for it to start."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./shield serve\n")))}m.isMDXComponent=!0}}]);