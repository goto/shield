"use strict";(self.webpackChunkshield=self.webpackChunkshield||[]).push([[810],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),h=i,y=u["".concat(c,".").concat(h)]||u[h]||d[h]||o;return r?n.createElement(y,a(a({ref:t},p),{},{components:r})):n.createElement(y,a({ref:t},p))}));function y(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},1480:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const o={},a="Glossary",s={unversionedId:"concepts/glossary",id:"concepts/glossary",title:"Glossary",description:"Backend",source:"@site/docs/concepts/glossary.md",sourceDirName:"concepts",slug:"/concepts/glossary",permalink:"/shield/concepts/glossary",draft:!1,editUrl:"https://github.com/goto/shield/edit/master/docs/docs/concepts/glossary.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Architecture",permalink:"/shield/concepts/architecture"},next:{title:"Introduction",permalink:"/shield/tour/intro"}},c={},l=[{value:"Backend",id:"backend",level:2},{value:"Permission",id:"permission",level:2},{value:"Principal",id:"principal",level:2},{value:"Resource",id:"resource",level:2},{value:"Resource Type",id:"resource-type",level:2},{value:"Project",id:"project",level:2},{value:"Organization",id:"organization",level:2},{value:"Namespace",id:"namespace",level:2},{value:"Role",id:"role",level:2},{value:"Policy",id:"policy",level:2},{value:"Entity",id:"entity",level:2},{value:"Spicedb",id:"spicedb",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"glossary"},"Glossary"),(0,i.kt)("h2",{id:"backend"},"Backend"),(0,i.kt)("p",null,"External Service which wants to use Shield for authz. It can verify access via Shield Proxy & API."),(0,i.kt)("h2",{id:"permission"},"Permission"),(0,i.kt)("p",null,"Ability to carry out any action, in Shield or configured Backends."),(0,i.kt)("h2",{id:"principal"},"Principal"),(0,i.kt)("p",null,"To whom we can grant Permission to. They can be of types:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"User: A person or service account who can be a Principal. It is identified by Email ID."),(0,i.kt)("li",{parentName:"ol"},"Group: Collection of Users."),(0,i.kt)("li",{parentName:"ol"},"All Registered Users: Collection of users who have registered in Shield. Any user who registers in Shield becomes part of this Principal.")),(0,i.kt)("h2",{id:"resource"},"Resource"),(0,i.kt)("p",null,"Entity which needs authorization to be accessed. For example, a GCE instance is a resource over which we need permission such as edit & view."),(0,i.kt)("h2",{id:"resource-type"},"Resource Type"),(0,i.kt)("p",null,"Classification that contains Resource instances. For example, GCE can be a resource type for GCE instances."),(0,i.kt)("h2",{id:"project"},"Project"),(0,i.kt)("p",null,"By which we can group Resources, of various different Resource Types, who have common environment."),(0,i.kt)("h2",{id:"organization"},"Organization"),(0,i.kt)("p",null,"Organization is the root node in the hierarchy of Resources, being a collection of Projects."),(0,i.kt)("h2",{id:"namespace"},"Namespace"),(0,i.kt)("p",null,"Type of objects over which we want authorization. They are of two types:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"System Namespace: Objects like Organization, Project & Team, over which we need authorization to actions such as adding user to team, adding user as owner of project.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Resource Namespace: Resources Types over which we need authorization. For example, we need edit & view permissions over GCE Instances."))),(0,i.kt)("h2",{id:"role"},"Role"),(0,i.kt)("p",null,"Its an IAM Identity that describes what are the permissions one Principal has."),(0,i.kt)("h2",{id:"policy"},"Policy"),(0,i.kt)("p",null,"Defines what Permission does a Role have."),(0,i.kt)("h2",{id:"entity"},"Entity"),(0,i.kt)("p",null,"Instance of a namespace."),(0,i.kt)("h2",{id:"spicedb"},"Spicedb"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/authzed/spicedb"},"SpiceDB")," is a Zanzibar-inspired open source database system for managing security-critical application permissions."))}u.isMDXComponent=!0}}]);