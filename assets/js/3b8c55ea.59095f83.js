"use strict";(self.webpackChunkshield=self.webpackChunkshield||[]).push([[696],{5788:(e,r,n)=>{n.d(r,{Iu:()=>p,yg:()=>m});var t=n(1504);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),c=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(s.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),g=o,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||l;return n?t.createElement(m,a(a({ref:r},p),{},{components:n})):t.createElement(m,a({ref:r},p))}));function m(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=g;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<l;c++)a[c]=n[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4080:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var t=n(5072),o=(n(1504),n(5788));const l={},a="Installation",i={unversionedId:"installation",id:"installation",title:"Installation",description:"We provide pre-built binaries, Docker Images and Helm Charts",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/shield/installation",draft:!1,editUrl:"https://github.com/goto/shield/edit/master/docs/docs/installation.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/shield/"},next:{title:"Architecture",permalink:"/shield/concepts/architecture"}},s={},c=[{value:"Binary (Cross-platform)",id:"binary-cross-platform",level:2},{value:"Homebrew",id:"homebrew",level:2},{value:"Docker",id:"docker",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Compiling from source",id:"compiling-from-source",level:2},{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Build",id:"build",level:3}],p={toc:c};function u(e){let{components:r,...n}=e;return(0,o.yg)("wrapper",(0,t.c)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"installation"},"Installation"),(0,o.yg)("p",null,"We provide pre-built ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/goto/shield/releases"},"binaries"),", ",(0,o.yg)("a",{parentName:"p",href:"https://hub.docker.com/r/gotocompany/shield"},"Docker Images")," and ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/goto/charts/tree/main/stable/shield"},"Helm Charts")),(0,o.yg)("h2",{id:"binary-cross-platform"},"Binary (Cross-platform)"),(0,o.yg)("p",null,"Download the appropriate version for your platform from ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/goto/shield/releases"},"releases")," page. Once downloaded, the binary can be run from anywhere.\nYou don\u2019t need to install it into a global location. This works well for shared hosts and other systems where you don\u2019t have a privileged account.\nIdeally, you should install it somewhere in your PATH for easy use. ",(0,o.yg)("inlineCode",{parentName:"p"},"/usr/local/bin")," is the most probable location."),(0,o.yg)("h2",{id:"homebrew"},"Homebrew"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},"# Install shield (requires homebrew installed)\n$ brew install goto/taps/shield\n\n# Upgrade shield (requires homebrew installed)\n$ brew upgrade shield\n\n# Check for installed shield version\n$ shield version\n")),(0,o.yg)("h2",{id:"docker"},"Docker"),(0,o.yg)("h3",{id:"prerequisites"},"Prerequisites"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Docker installed")),(0,o.yg)("p",null,"Run Docker Image"),(0,o.yg)("p",null,"Shield provides Docker image as part of the release. Make sure you have Spicedb and postgres running on your local and run the following."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},"# Download docker image from docker hub\n$ docker pull gotocompany/shield\n\n# Run the following docker command with minimal config.\n$ docker run -p 8080:8080 \\\n  -e SHIELD_DB_DRIVER=postgres \\\n  -e SHIELD_DB_URL=postgres://shield:@localhost:5432/shield?sslmode=disable \\\n  -e SHIELD_SPICEDB_HOST=spicedb.localhost:50051 \\\n  -e SHIELD_SPICEDB_PRE_SHARED_KEY=randomkey\n  -v .config:.config\n  gotocompany/shield serve\n")),(0,o.yg)("h2",{id:"compiling-from-source"},"Compiling from source"),(0,o.yg)("h3",{id:"prerequisites-1"},"Prerequisites"),(0,o.yg)("p",null,"Shield requires the following dependencies:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Golang (version 1.18 or above)"),(0,o.yg)("li",{parentName:"ul"},"Git")),(0,o.yg)("h3",{id:"build"},"Build"),(0,o.yg)("p",null,"Run the following commands to compile ",(0,o.yg)("inlineCode",{parentName:"p"},"shield")," from source"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:goto/shield.git\ncd shield\nmake build\n")),(0,o.yg)("p",null,"Use the following command to test"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-shell"},"./shield version\n")),(0,o.yg)("p",null,"Shield service can be started with the following command although there are few required ",(0,o.yg)("a",{parentName:"p",href:"/shield/reference/configurations"},"configurations")," for it to start."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},"./shield server start\n")))}u.isMDXComponent=!0}}]);